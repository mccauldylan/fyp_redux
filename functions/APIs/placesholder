exports.getAuthenticatedUser = (req, res) => {
    let userData = {};
    db.doc(`/users/${req.user.username}`)
      .get()
      .then((doc) => {
        if (doc.exists) {
          userData.credentials = doc.data();
          return db
            .collection("approves")
            .where("username", "==", req.user.username)
            .get();
        }
      })
      .then((data) => {
        userData.approves = [];
        data.forEach((doc) => {
          userData.approves.push(doc.data());
        });
        
        return res.json(userData);
      })
      .catch((err) => {
        console.error(err);
        return res.status(500).json({ error: err.code });
      });
  };

    exports.getOneRow = (req, res) => {
    let rowData = {};
    db.doc(`/users/${req.user.username}`)
      .get()
      .then((doc) => {
        if (doc.exists) {
          userData.credentials = doc.data();
          return db
            .collection("approves")
            .where("username", "==", req.user.username)
            .get();
        }
      })
      .then((data) => {
        userData.approves = [];
        data.forEach((doc) => {
          userData.approves.push(doc.data());
        });
        
        return res.json(userData);
      })
      .catch((err) => {
        console.error(err);
        return res.status(500).json({ error: err.code });
      });
  };

  exports.editUserDetails = (req, res) => {
  let userData = {};

  db.doc(`/users/${req.user.username}`)
    .update(req.body)
    .then(() => {
      db.doc(`/users/${req.user.username}`)
        .get()
        .then((doc) => {
          if (doc.exists) {
            userData = doc.data();
            res.json(userData);
          }
        });
    })
    .catch((err) => {
      console.error(err);
      return res.status(500).json({
        error: err.code,
      });
    });
};

App state = user: {userDetails}
    Table state = categoryRows: {categoryRowsDetails}, userId = {user.userId}
        TableRow rowId = {row.rowId}
            Edit rowId = {row.rowId}
            Delete rowId = {row.rowId} 
            VoteFor rowId = {row.rowId}, userId = {user.userId}
            VoteAgainst rowId = {row.rowId}, userId = {user.userId}
            VoteNA rowId = {row.rowId}, userId = {user.userId}